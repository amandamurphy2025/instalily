{"ast":null,"code":"// src/api/api.js\n\nexport const getAIMessage = async userQuery => {\n  try {\n    const response = await fetch('http://localhost:3001/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message: userQuery\n      })\n    });\n    const data = await response.json();\n    return {\n      role: \"assistant\",\n      content: data.reply\n    };\n  } catch (error) {\n    console.error(\"Error fetching AI message:\", error);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the AI.\"\n    };\n  }\n};","map":{"version":3,"names":["getAIMessage","userQuery","response","fetch","method","headers","body","JSON","stringify","message","data","json","role","content","reply","error","console"],"sources":["/Users/amandamurphy/instalily/case-study/src/api/api.js"],"sourcesContent":["// src/api/api.js\n\nexport const getAIMessage = async (userQuery) => {\n  try {\n    const response = await fetch('http://localhost:3001/chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ message: userQuery }),\n    });\n\n    const data = await response.json();\n\n    return {\n      role: \"assistant\",\n      content: data.reply\n    };\n  } catch (error) {\n    console.error(\"Error fetching AI message:\", error);\n    return {\n      role: \"assistant\",\n      content: \"Sorry, I couldn't connect to the AI.\"\n    };\n  }\n};\n\n"],"mappings":"AAAA;;AAEA,OAAO,MAAMA,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,EAAE;MACzDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAER;MAAU,CAAC;IAC7C,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IAElC,OAAO;MACLC,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAEH,IAAI,CAACI;IAChB,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO;MACLH,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;IACX,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}